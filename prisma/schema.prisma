// Model for Microsoft Teams
model Team {
  id          String  @id @unique // Graph ID
  displayName String?
  description String?
  visibility  String?
  owners      User[]   @relation("TeamOwners")
  members     User[]   @relation("TeamMembers")
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Model for storing the M365 App Registration configuration
model Configuration {
  id           Int      @id @default(1) // Only ever one row
  tenantId     String
  clientId     String
  clientSecret String
  // Add createdAt/updatedAt for tracking when it was last updated
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

// Model to track the status and times of data collection scans per data type
model ScanLog {
  id          Int       @id @default(autoincrement())
  dataType    String // e.g., "users", "groups"
  status      String // e.g., "IDLE", "IN_PROGRESS", "COMPLETED", "FAILED"
  startedAt   DateTime?
  completedAt DateTime?
  error       String?
}

// Model for M365 Users
model User {
  id                String   @id @unique // Graph ID
  displayName       String?
  userPrincipalName String?
  accountEnabled    Boolean?
  department        String?
  jobTitle          String?
  ownerOfGroups     M365Group[] @relation("GroupOwners")
  memberOfGroups    M365Group[] @relation("GroupMembers")
  ownerOfTeams      Team[]      @relation("TeamOwners")
  memberOfTeams     Team[]      @relation("TeamMembers")
}

// Model for M365 Groups (formerly Office 365 Groups)
model M365Group {
  id           String   @id @unique // Graph ID
  displayName  String?
  mailNickname String?
  memberCount  Int?
  visibility   String? // Public or Private
  owners       User[]   @relation("GroupOwners")
  members      User[]   @relation("GroupMembers")
}

// Model for Security and Distribution Groups
model SecurityGroup {
  id                  String  @id @unique // Graph ID
  displayName         String?
  isDistributionGroup Boolean // true for Distribution, false for Security
  memberCount         Int?
}

// Model for SharePoint Sites
model SharePointSite {
  id                String   @id @unique // Site ID
  name              String?
  url               String?
  teams             String? // Comma-separated Team IDs or names
  channelSite       Boolean? // Is this a Teams channel site?
  storageUsed       Float?
  hub               String?
  template          String?
  lastActivity      DateTime?
  dateCreated       DateTime?
  storageLimit      Float?
  storageUsedPct    Float?
  m365Group         String? // M365 Group ID or name
  filesViewedEdited Int?
  pageViews         Int?
  pageVisits        Int?
  filesCount        Int?
  sensitivity       String?
  externalSharing   String?
}

// Model for OneDrive
model OneDrive {
  id         String   @id @unique // Drive ID
  ownerId    String? // User/Owner Graph ID
  ownerName  String?
  siteName   String?
  siteUrl    String?
  size       Float?
  // Optionally, add createdAt/updatedAt for tracking
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
